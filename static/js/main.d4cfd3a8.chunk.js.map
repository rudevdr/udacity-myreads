{"version":3,"sources":["BooksAPI.js","BookShelf.js","BookRack.js","BookSearch.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","BookShelf","_this","this","react_default","a","createElement","className","props","name","filter","imageLinks","map","index","key","style","width","height","backgroundImage","thumbnail","value","onChange","e","updateBookShelf","target","disabled","title","author","Component","BookRack","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","bind","assertThisInitialized","_this2","BooksAPI","response","fetchAllBooks","_this3","setState","src_BookShelf","getBooksByShelf","Link","to","BookSearch","currentBooks","getSearchResultName","length","selectedBook","query","searchableBooks","forEach","matchingBook","find","currentBook","_this4","type","placeholder","event","searchBooks","BooksApp","Route","exact","path","render","src_BookRack","src_BookSearch","React","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d4cfd3a8.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nexport let token = localStorage.token\nif (!token)\n\ttoken = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n\t'Accept': 'application/json',\n\t'Authorization': token\n}\n\n\nexport const get = (bookId) =>\n\tfetch(`${api}/books/${bookId}`, { headers })\n\t\t.then(res => res.json())\n\t\t.then(data => data.book)\n\nexport const getAll = () =>\n\tfetch(`${api}/books`, { headers })\n\t\t.then(res => res.json())\n\t\t.then(data => data.books)\n\nexport const update = (book, shelf) =>\n\tfetch(`${api}/books/${book.id}`, {\n\t\tmethod: 'PUT',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ shelf })\n\t}).then(res => res.json())\n\nexport const search = (query) =>\n\tfetch(`${api}/search`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t...headers,\n\t\t\t'Content-Type': 'application/json'\n\t\t},\n\t\tbody: JSON.stringify({ query })\n\t}).then(res => res.json())\n\t\t.then(data => data.books)\n","import React, {Component} from 'react'\nimport './App.css'\n\nclass BookShelf extends Component{\n\trender(){\n\t\treturn (\n\t\t\t<div className=\"bookshelf\">\n\t\t\t\t<h2 className=\"bookshelf-title\">{this.props.name}</h2>\n\t\t\t\t<div className=\"bookshelf-books\">\n\t\t\t\t\t<ol className=\"books-grid\">\n\t\t\t\t\t{this.props.books.filter(book => book.imageLinks).map((book, index) => (\n\t\t\t\t\t\t<li key={index}>\n\t\t\t\t\t\t\t<div className=\"book\">\n\t\t\t\t\t\t\t\t<div className=\"book-top\">\n\t\t\t\t\t\t\t\t\t<div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: \"url(\" + book.imageLinks.thumbnail + \")\"}}></div>\n\t\t\t\t\t\t\t\t\t<div className=\"book-shelf-changer\">\n\t\t\t\t\t\t\t\t\t\t<select value={book.shelf} onChange={(e) => this.props.updateBookShelf(book, e.target.value)} >\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"move\" disabled>Move to...</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"currentlyReading\">Currently Reading</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"wantToRead\">Want to Read</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"read\">Read</option>\n\t\t\t\t\t\t\t\t\t\t\t<option value=\"none\">None</option>\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"book-title\">{book.title}</div>\n\t\t\t\t\t\t\t\t<div className=\"book-authors\">{book.author}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t\t</ol>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default BookShelf\n","import React, {Component} from 'react'\nimport './App.css'\nimport {Link} from \"react-router-dom\";\n\nimport * as BooksAPI from \"./BooksAPI\";\nimport BookShelf from \"./BookShelf\";\n\nclass BookRack extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tbooks : []\n\t\t};\n\t\tthis.updateBookShelf = this.updateBookShelf.bind(this);\n\t}\n\n\n\tgetBooksByShelf(shelf) {\n\t\treturn this.state.books.filter(book => book.shelf === shelf);\n\t}\n\n\tupdateBookShelf(book, shelf) {\n\t\tBooksAPI.update(book, shelf).then((response) => {\n\t\t\tthis.fetchAllBooks();\n\t\t});\n\t}\n\n\tfetchAllBooks(){\n        BooksAPI.getAll().then((books) => {\n            this.setState({books: books});\n        });\n\n\t}\n\n    componentWillMount() {\n\t\tthis.fetchAllBooks();\n    }\n\n\n\trender(){\n\t\treturn (\n\t\t\t\t<div className=\"app\">\n\t\t\t\t\t<div className=\"list-books\">\n\t\t\t\t\t\t<div className=\"list-books-title\">\n\t\t\t\t\t\t\t<h1>MyReads</h1>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"list-books-content\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<BookShelf name=\"Currently Reading\" books={this.getBooksByShelf('currentlyReading')} updateBookShelf={this.updateBookShelf} />\n\t\t\t\t\t\t\t\t<BookShelf name=\"Want To Read\" books={this.getBooksByShelf('wantToRead')} updateBookShelf={this.updateBookShelf} />\n\t\t\t\t\t\t\t\t<BookShelf name=\"Read\" books={this.getBooksByShelf('read')} updateBookShelf={this.updateBookShelf}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"open-search\">\n\t\t\t\t\t\t\t<div className=\"open-search\">\n\t\t\t\t\t\t\t\t<Link to=\"/search\">\n\t\t\t\t\t\t\t\t\t<button >Add a book</button>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default BookRack\n","import React, {Component} from \"react\";\nimport {Link} from \"react-router-dom\";\n\nimport * as BooksAPI from './BooksAPI'\nimport BookShelf from \"./BookShelf\";\n\nclass BookSearch extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tbooks: [],\n\t\t\tcurrentBooks: []\n\t\t}\n\t\tthis.getSearchResultName = this.getSearchResultName.bind(this);\n\t\tthis.updateBookShelf = this.updateBookShelf.bind(this);\n\n\t}\n\n\tgetSearchResultName(){\n\t\tif (this.state.books.length){\n\t\t\treturn \"Found \"+this.state.books.length+\" Results\"\n\t\t}\n\t\telse return \"\"\n\t}\n\n\tcomponentWillMount(){\n         BooksAPI.getAll().then((books) => {\n            this.setState({currentBooks: books});\n        });\n\n\t}\n\n\tupdateBookShelf(book, shelf) {\n\t\tvar currentBooks = this.state.books;\n\t\tcurrentBooks.filter(selectedBook => selectedBook.id === book.id)[0].shelf = shelf;\n\t\tBooksAPI.update(book, shelf);\n\t}\n\n\n\tsearchBooks(query){\n\t\tif (query) {\n\t\t\tBooksAPI.search(query).then((searchableBooks) => {\n\t\t\t\tif (searchableBooks.length) {\n\t\t\t\t\tsearchableBooks.forEach((book, index) => {\n                        let matchingBook = this.state.currentBooks.find((currentBook) => currentBook.id === book.id);\n\t\t\t\t\t\tif (matchingBook) {\n\t\t\t\t\t\t\tbook.shelf = matchingBook.shelf\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbook.shelf = 'none'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsearchableBooks[index] = book;\n\n\t\t\t\t\t});\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tbooks: searchableBooks,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.setState({\n\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tbooks: []\n\t\t\t});\n\n\t\t}\n\t};\n\n\n    render() {\n        return (\n            <div className=\"search-books\">\n                <div className=\"search-books-bar\">\n                    <Link className=\"close-search\" to=\"/\"> Close Search</Link>\n                    <div className=\"search-books-input-wrapper\">\n                        <input\n                            type=\"text\"\n                            placeholder=\"Search by title or author\"\n                            onChange={(event) => this.searchBooks(event.target.value)}\n                        />\n                    </div>\n                </div>\n                <div className=\"search-books-results\">\n                    <ol className=\"books-grid\">\n                            <li className=\"contact-list-item\">\n\t\t\t\t\t\t\t\t<BookShelf name={this.getSearchResultName()} books={this.state.books} updateBookShelf={this.updateBookShelf}/>\n                            </li>\n                    </ol>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default BookSearch;\n","import React from 'react'\nimport {Route} from \"react-router-dom\";\nimport BookRack from './BookRack'\nimport BookSearch from './BookSearch'\n// import * as BooksAPI from './BooksAPI'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"app\">\n\t\t\t\t<Route exact path=\"/\" render={() => <BookRack/>} />\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/search\"\n\t\t\t\t\trender={() =>\n\t\t\t\t\t<BookSearch />\n\t\t\t\t\t}/>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {BrowserRouter} from \"react-router-dom\";\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n\t<BrowserRouter><App /></BrowserRouter>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}